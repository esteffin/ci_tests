
language: cpp

# [skip travis] in commit message avoid rebuild
# branches:
#   except:
#     - /.*no[-_]?build.*/
# branches:
#   only:
#   - master

cache: ccache

jobs:
  include:
    - name: "Ubuntu 18.04 lib build gcc"
      os: linux
      dist: bionic
      compiler: gcc
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "Ubuntu 20.04 lib build gcc"
      os: linux
      dist: focal
      compiler: gcc
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "Ubuntu 18.04 lib build clang"
      os: linux
      dist: bionic
      compiler: clang
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "Ubuntu 20.04 lib build clang"
      os: linux
      dist: focal
      compiler: clang
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "Ubuntu 18.04 package build gcc"
      os: linux
      dist: bionic
      compiler: gcc
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON
    - name: "Ubuntu 20.04 package build gcc"
      os: linux
      dist: focal
      compiler: gcc
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON
    - name: "Ubuntu 18.04 package build clang"
      os: linux
      dist: bionic
      compiler: clang
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON
    - name: "Ubuntu 20.04 package build clang"
      os: linux
      dist: focal
      compiler: clang
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON
    - name: "MacOS Mojave lib build"
      os: osx
      osx_image: xcode11.3
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "MacOS Mojave package build"
      os: osx
      osx_image: xcode11.3
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON
    - name: "MacOS Catalina lib build"
      os: osx
      osx_image: xcode12
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=OFF
    - name: "MacOS Catalina package build"
      os: osx
      osx_image: xcode12
      env: INSTALL_PREFIX="~/ci_test" PACKAGE_BUILD=ON

addons:
  apt:
    packages:
    - g++
    - clang
    - patchelf
    - cmake
    - bats
    update: true
  homebrew:
    packages:
    - cmake
    - bats-core
    - ccache
    # update: true

# activating ccache on MacOS
before_install:
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then 
        export PATH="/usr/local/opt/ccache/libexec:$PATH";
    fi

# install:
#   - ./ci/install_deps.sh

# before_script:
#   - skip

script:
  - ./ci/build_install_lib.sh "${PACKAGE_BUILD}" "${INSTALL_PREFIX}"
  - ./ci/test_lib.sh
  - ./ci/build_test_consumer.sh "example" "${PACKAGE_BUILD}" "${INSTALL_PREFIX}"



# notifications:
#   email: false
# sudo: required
# before_script:
#   #

# jobs:
#   include:
#   - os: linux
#     dist: bionic
#     env:
#       - TEST="Build test"
#     addons:
#       apt:
#         # sources:
#           # - ubuntu-toolchain-r-test
#         packages:
#           - gcc
#           - g++
#           - cmake
#           # - m4
#           # - patchelf
#   - stage: build_library
#     script:
#       - mkdir build && cd build && cmake .. && make -j4
#       - ctest -j4
#   # - stage: test_library
#   #   script:
#   #       - ctest -j4
